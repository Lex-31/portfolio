//Кнопка меню
const btn = document.querySelector('.menu-btn');
const menu = document.querySelector('.menu__list');

btn.addEventListener('click', () => { // скрол страницы вверх
  const scrollUp = () => { // прокрутка страницы вверх
    window.scrollTo({ //поднимаем страницу максим. вверх
      top: 0,
      left: 0,
      behavior: 'smooth'
    });
  }

  const menuTopAdd = () => { // доб/уд класс, фиксирует от прокрутки
    menu.classList.toggle('menu__list--active'); // добавить/удалить новый класс 
    if (menu.classList.contains('menu__list--active')) { //если есть новый класс
      document.body.style.overflow = 'hidden'; //фиксируем body от перемещения
    } else {
      document.body.style.overflow = '';
    }
  }

  if (window.scrollY === 0) { // Страница уже в самом верху
    menuTopAdd(); // доб/уд класс, фиксирует от прокрутки
  } else {
    scrollUp(); // Сначала прокручиваем страницу вверх
    window.onscroll = function () { // Дождитесь завершения прокрутки
      if (window.scrollY === 0) { // Прокрутка достигла верха страницы
        menuTopAdd(); // доб/уд класс, фиксирует от прокрутки
        window.onscroll = null; // Удаляем обработчик, чтобы он больше не вызывался
      }
    };
  }

});

//Кнопки на фотке
const buttons = document.querySelectorAll('.program__item'); // Получите все элементы с классом
buttons.forEach((button) => { // Проходимся по каждой кнопке и добавляем обработчик события клика
  button.addEventListener('click', () => {
    //активными могут быть несколько конопк
    /* if (button.classList.contains('program__item--active')) {  // Проверяем, есть ли у кнопки класс-модификатор
       button.classList.remove('program__item--active'); // Если есть, удалите его
     } else {
       button.classList.add('program__item--active'); // Если нет, добавьте его
     } */

    //активной может быть только одна кнопка
    buttons.forEach(function (btn) {
      btn.classList.remove('program__item--active');
    });
    button.classList.add('program__item--active');

  });

  const top = button.getAttribute('data-top'); // Получаем значение top из data-атрибута
  button.style.top = top + 'px'; // Установите индивидуальное значение top для текущей кнопки
});

//слайдер
const swiper = new Swiper(".swiper", { //плагин swiper вешаем на класс div элемента 
  loop: true, //бесконечный слайд
  slidesPerView: 1.9, // сколько слайдов в активной области
  centeredSlides: true, //по центру активный слайд
  spaceBetween: 30, //расстояние между слайдами
  allowTouchMove: false, //запретить листать свайпом
  pagination: { //параметры пагинации
    el: '.swiper-pagination', //пагинацию вешаем на класс div элемента
    clickable: true,
  },
  navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev',
  },
});

//Калькулятор ИМТ
const inputFemale = document.getElementById('female');
const inputMale = document.getElementById('male');
const inputAge = document.getElementById('age');
const inputWeight = document.getElementById('weight');
const inputHeight = document.getElementById('height');
const selectNode = document.getElementById('options');
const btnResult = document.getElementById('btnResult');

const outputResult = document.querySelector('.result');

btnResult.addEventListener('click', (event) => {
  event.preventDefault();
  const female = inputFemale.checked; //true/false
  const male = inputMale.checked; //true/false
  const age = Number(inputAge.value);
  const weight = Number(inputWeight.value);
  const height = Number(inputHeight.value);
  const selected = Number(selectNode.value);

  outputResult.innerHTML = () => {
    const expression = () => { //выражение без учета жен/муж
    };

    if (female) { //если для женщин
      return expression();
    } else { //если для мужчин
      return expression();
    }
  };
});